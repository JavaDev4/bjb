import org.springframework.stereotype.Component;

@Component
public class BatchNameHolder {
    private String batchName;

    public synchronized void setBatchName(String batchName) {
        this.batchName = batchName;
    }

    public synchronized String getBatchName() {
        return batchName;
    }

    public synchronized void clear() {
        this.batchName = null;
    }
}



-------


import org.springframework.batch.core.JobExecution;
import org.springframework.batch.core.JobParameter;
import org.springframework.batch.core.listener.JobExecutionListenerSupport;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class JobUtils extends JobExecutionListenerSupport {

    private final BatchNameHolder batchNameHolder;

    @Autowired
    public JobUtils(BatchNameHolder batchNameHolder) {
        this.batchNameHolder = batchNameHolder;
    }

    @Override
    public void beforeJob(JobExecution jobExecution) {
        JobParameter batchNameParam = jobExecution.getJobParameters().getParameters().get("BATCH_NAME");
        if (batchNameParam != null) {
            String batchName = batchNameParam.getValue().toString();
            batchNameHolder.setBatchName(batchName);
        } else {
            System.out.println("BATCH_NAME parameter is not provided for this job.");
        }
    }

    @Override
    public void afterJob(JobExecution jobExecution) {
        // Optionally keep the batch name for later use or clear it here
        // batchNameHolder.clear();
    }
}
----

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class SomeService {

    private final BatchNameHolder batchNameHolder;

    @Autowired
    public SomeService(BatchNameHolder batchNameHolder) {
        this.batchNameHolder = batchNameHolder;
    }

    public void performTask() {
        String batchName = batchNameHolder.getBatchName();
        if ("specialBatchJob".equals(batchName)) {
            System.out.println("Performing task for specialBatchJob.");
        } else {
            System.out.println("No special tasks for this batch.");
        }
    }
}