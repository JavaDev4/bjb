import org.springframework.batch.core.JobExecution;
import org.springframework.batch.core.JobParameter;
import org.springframework.batch.core.listener.JobExecutionListenerSupport;
import org.springframework.stereotype.Component;

@Component
public class JobUtils extends JobExecutionListenerSupport {

    private static final ThreadLocal<String> currentBatchName = new ThreadLocal<>();

    @Override
    public void beforeJob(JobExecution jobExecution) {
        // Retrieve the BATCH_NAME parameter from the job parameters
        JobParameter batchNameParam = jobExecution.getJobParameters().getParameters().get("BATCH_NAME");
        if (batchNameParam != null) {
            String batchName = batchNameParam.getValue().toString();
            currentBatchName.set(batchName);
        } else {
            // Optionally handle the case where BATCH_NAME is not set
            System.out.println("BATCH_NAME parameter is not provided for this job.");
        }
    }

    @Override
    public void afterJob(JobExecution jobExecution) {
        currentBatchName.remove();
    }

    public static String getCurrentBatchName() {
        return currentBatchName.get();
    }
}