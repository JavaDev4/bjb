import static org.assertj.core.api.Assertions.assertThat;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;
import org.springframework.batch.core.repository.JobRepository;
import org.springframework.batch.core.step.builder.StepBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.transaction.PlatformTransactionManager;

import javax.sql.DataSource;

@ExtendWith(SpringExtension.class)
@SpringBootTest
@ContextConfiguration(classes = {ADEJobConfigTest.TestConfig.class, ADEJobConfig.class})
public class ADEJobConfigTest {

    @Autowired
    private Job adeJob;

    @Autowired
    @Qualifier("adeStep")
    private Step adeStep;

    @Test
    public void testJobConfiguration() {
        assertThat(adeJob).isNotNull();
        assertThat(adeStep).isNotNull();
    }

    @Configuration
    @EnableBatchProcessing
    static class TestConfig {

        @Bean
        public JobRepository jobRepository() {
            // Mock JobRepository bean creation
            return null;
        }

        @Bean
        public PlatformTransactionManager transactionManager() {
            // Mock PlatformTransactionManager bean creation
            return null;
        }

        @Bean
        public DataSource dataSource() {
            // Mock DataSource bean creation
            DriverManagerDataSource dataSource = new DriverManagerDataSource();
            dataSource.setDriverClassName("org.h2.Driver");
            dataSource.setUrl("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1");
            dataSource.setUsername("sa");
            dataSource.setPassword("");
            return dataSource;
        }
    }
}
