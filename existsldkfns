Certainly! Below is an example that demonstrates how to use a value returned from one method in a switch-case statement as part of a condition check in another method.

```java
public class ConditionCheckExample {

    public static void main(String[] args) {
        ConditionCheckExample example = new ConditionCheckExample();
        
        // First method call
        String resultFromFirstMethod = example.firstMethod(1);
        
        // Second method call using the result from the first method
        String finalResult = example.secondMethod(resultFromFirstMethod, "AnotherString");
        
        System.out.println("Final Result: " + finalResult);
    }

    // First method with switch-case that returns a string
    public String firstMethod(int value) {
        String result;
        switch (value) {
            case 1:
                result = "ValueOne";
                break;
            case 2:
                result = "ValueTwo";
                break;
            case 3:
                result = "ValueThree";
                break;
            default:
                result = "Unknown";
                break;
        }
        return result;
    }

    // Second method that takes the result of the first method and another string as conditions
    public String secondMethod(String firstCondition, String secondCondition) {
        if ("ValueOne".equals(firstCondition) && "AnotherString".equals(secondCondition)) {
            return "Condition Met: ValueOne and AnotherString";
        } else if ("ValueTwo".equals(firstCondition) && "AnotherString".equals(secondCondition)) {
            return "Condition Met: ValueTwo and AnotherString";
        } else {
            return "Conditions Not Met";
        }
    }
}
```

In this example:
1. `firstMethod(int value)` uses a switch-case statement to return a string based on the integer value provided.
2. `secondMethod(String firstCondition, String secondCondition)` takes two strings as parameters and checks the conditions using an `if-else` statement.

The `main` method demonstrates how to call these methods and use the result of the first method as part of the condition check in the second method.