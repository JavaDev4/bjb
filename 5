@Bean(name = "ADE_FACILITY_READER")
public JdbcPagingItemReader<ADEFacilityDto> getFacilityADEPagingItemReader() throws Exception {
    Map<String, Object> parameters = getQueryParams();
    String selectClause = "SELECT a.portfolio_identifier, a.facility_identifier, LPAD(a.obligor, 4, '0'), "
            + "d.DC_3_300_PURPOSE_CODE, n.nl_dbid_value, n.nl_dbid_code, n.nl_dbid_desc, "
            + "LPAD(a.obligation, 4, '0') as dataValueText";
    String fromClause = "FROM acbs_frb_dev.acbs_migration_process a "
            + "JOIN acbs_frb_dev.dc3300 d ON a.obligor = d.dc_3_300_obligor "
            + "JOIN acbs_frb_dev.numeric_literals n ON d.DC_3_300_PURPOSE_CODE = n.nl_dbid_value";
    String whereClause = "WHERE a.acos_service = 'Create Facility' AND a.processed <> 0 AND n.nl_dbid_code = 'F086'";
    String orderByClause = "a.party_identifier ASC";

    JdbcPagingItemReader<ADEFacilityDto> reader = new JdbcPagingItemReader<>();
    reader.setDataSource(acbsDataSource);
    reader.setPageSize(10);
    reader.setRowMapper(new ADEFacilityRowMapper());

    SqlPagingQueryProviderFactoryBean queryProvider = new SqlPagingQueryProviderFactoryBean();
    queryProvider.setDataSource(acbsDataSource);
    queryProvider.setSelectClause(selectClause);
    queryProvider.setFromClause(fromClause);
    queryProvider.setWhereClause(whereClause);
    queryProvider.setSortKey(orderByClause);

    try {
        reader.setQueryProvider(queryProvider.getObject());
    } catch (Exception e) {
        logger.error("Error creating query provider", e);
        throw new RuntimeException("Failed to create query provider", e);
    }

    reader.setParameterValues(parameters);

    return reader;
}
